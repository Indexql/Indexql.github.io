<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>今天 FR 了 Singularity</title>
    <url>/2020/03/24/%E4%BB%8A%E5%A4%A9%20FR%20%E4%BA%86%20Singularity/</url>
    <content><![CDATA[<p>引用维基上的概念：</p>
<blockquote>
<p><strong>Singularity（奇点）</strong>，出自<a href="https://zh.wikipedia.org/wiki/奇點" target="_blank" rel="noopener">奇点</a>理论；根据<a href="https://zh.wikipedia.org/wiki/技术发展史" target="_blank" rel="noopener">技术发展史</a>总结出的观点，认为人类正在接近一个使得现有技术被完全抛弃或者人类文明被完全颠覆的事件点，在这个事件点以后的事件就像黑洞的<a href="https://zh.wikipedia.org/wiki/事件视界" target="_blank" rel="noopener">事件视界</a>一样完全无法预测。例如，<a href="https://zh.wikipedia.org/wiki/意识上传" target="_blank" rel="noopener">意识上传</a>技术可能使人类的意识摆脱有机体的约束，在这个奇点之后的人类文明是一种现在完全无法理解的水平。</p>
</blockquote>
<p>我是今年的两月初才开始玩 Arcaea 的。是我见过的比较硬核的音游。Emmmmmm 也是我之前玩的音游都太休闲了（特指邦邦）。</p>
<p>Arcaea 的适应花了大概一个月时间，所以现在能 FR 这首 10.4 定数的歌对我还是一个很大的鼓舞。这几天的上头死磕终于有所回报，一直以来的努力也没有全部木大。（嗯？）</p>
<p><img src="/" class="lazyload" data-src="http://q7y4py6en.bkt.clouddn.com/static/images/%E4%BB%8A%E5%A4%A9%20FR%20%E4%BA%86%20Singularity/2.png"  alt="Singularity Song Cover"></p>
<p>其实要讲的是，第一次看到 Singularity 并不是在 Arcaea。而是在 2019 的第七届 RDMA 编程挑战赛，The 7th RDMA Programming Competition。这是由 HPC-AI Advisory Council 主办的面向亚太地区的竞赛。我们和清华大学并列二等奖，而一等奖则是中科大，膜。</p>
<p>题目是「Demonstrate the use of RDMA for HPC applications in a container environment」。而当时，组委会给出的二选一的 Container Solution 分别为 Docker 和 Singularity，而我们经过分析选择了前者。</p>
<p><img src="/" class="lazyload" data-src="http://q7y4py6en.bkt.clouddn.com/static/images/%E4%BB%8A%E5%A4%A9%20FR%20%E4%BA%86%20Singularity/1.jpg"  alt="Singularity Container"></p>
<p>而在 Arcaea 中，当朋友（@星空夜）第一次给我推荐 Singularity 我就入迷了，简而言之就是好听！带感！天地交互帅！然而实际练起来却的确是地狱级的。所幸，坚持到现在我终于能把它 FR 了。</p>
<p>虽然 Arcaea 不是主业，但最近因为兴趣而认真起来的进步效率令人欣喜。当初 RDMA 编程挑战赛的遗憾在 Arcaea 中得以补偿，让我不由得相信努力的意义，希望在学业上也能这样找到兴趣、提高效率。首先从弥补上应补的课程，提升到应有的水平开始！</p>
<p>静下心来，路要一步一步走。</p>
<p>最后补一张结算图。</p>
<p><img src="/" class="lazyload" data-src="http://q7y4py6en.bkt.clouddn.com/static/images/%E4%BB%8A%E5%A4%A9%20FR%20%E4%BA%86%20Singularity/3.jpg"  alt="Singularity Results"></p>
<h3 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h3><ul>
<li><a href="https://zh.wikipedia.org/wiki/技术奇异点" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/%E6%8A%80%E6%9C%AF%E5%A5%87%E5%BC%82%E7%82%B9</a></li>
</ul>
]]></content>
      <categories>
        <category>Games</category>
      </categories>
  </entry>
  <entry>
    <title>关于文字排版</title>
    <url>/2020/03/23/%E5%85%B3%E4%BA%8E%E6%96%87%E5%AD%97%E6%8E%92%E7%89%88/</url>
    <content><![CDATA[<p>博客的文字排版问题，主要表现为<font color="red">「中英文混排时中文与英文之间是否要有空格」</font>这个问题。</p>
<h3 id="「日常」"><a href="#「日常」" class="headerlink" title="「日常」"></a>「日常」</h3><p>首先，个人习惯在聊天过程中不加空格。苹果在 iOS 13 Beta 4 的更新中加入了中英文混排时自动增加显示间距的实现，终结了长期以来关于要不要添加空格的争论。我试用过一段时间的手动添加空格，倒不是说麻烦，只不过利用手机聊天的时候，苹果已经开启了最优适配。而另一方面，用户其实并不能识别出有没有加空格，我甚至有时候会通过删除撤销来测试有没有空格的存在。我觉得有点多此一举，之后就都不加空格了。</p>
<h3 id="「正式」"><a href="#「正式」" class="headerlink" title="「正式」"></a>「正式」</h3><p>但博客相比日常的聊天还是比较正式的文档类型，从自己的强迫症来说，作为有 Publish 或者 Post 性质的文章，其规范性还是应当被重视的。所以查阅了知乎和其他一些网站相关资料，得出的结论是：</p>
<blockquote>
<p>至今<strong><font color="red">没有规范，只有习惯</font></strong>。  </p>
</blockquote>
<p>Adobe InDesign、Microsoft Word 等对中文与西文（这里用「西文」来泛指用空格分词的外文）混合排版支持较好的软件，都默认增大汉字和西文的间距。InDesign 的默认设置是 1/4 的全角空格宽度（遵从 JIS），也就是约等于一个半角空格。</p>
<p>但大多数情况下我们没有这样专业排版软件的支持，只能手动控制。这种时候，比较在意文字设计（typography，又译「字体排印」）的团队或个人往往都在操作系统界面或网站中的汉字和西文之间插入一个半角空格。包括 Apple、Microsoft、Google、Adobe……</p>
<p>回想一下，在用苹果设备的时候，Google Pack 的时候，甚至平时 Word 打字的时候确实在体验上是有所提升的。而 Adobe 目前只会一点简单的 PS 和 PR，注意力都集中在任务本身。不过话又说回来，平时不注意的小细节就是优秀的大公司在设计方面的匠心所在，平时就被人一眼看出、被人诟病的 UI 才是其他追赶者应当反思的。换句话说，注意不到的细节值得称赞，用得难受的说明有问题。</p>
<p>感谢大佬们的讨论给了我一点启发，也解决了我的强迫症。</p>
<p>综上，我还是打算在此借鉴采用以下方案：</p>
<blockquote>
<p><strong>中文正文及标题中出现的英文及数字应该使用半角方式输入，并且在左右各留一个半角空格。如果这些这些半角英文及数字的左边或者右边紧接着任何的中文全角括号或者其他标点符号的话，则不需要加入半角空格。特殊地，在代码两侧任何情况下都加入一个半角空格。譬如 <code>example</code> 。</strong></p>
</blockquote>
<h3 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h3><ul>
<li><p><a href="https://www.zhihu.com/question/19587406" target="_blank" rel="noopener">https://www.zhihu.com/question/19587406</a></p>
</li>
<li><p><a href="https://news.mydrivers.com/1/630/630191.htm" target="_blank" rel="noopener">https://news.mydrivers.com/1/630/630191.htm</a></p>
</li>
</ul>
]]></content>
      <categories>
        <category>Free Talk</category>
      </categories>
  </entry>
  <entry>
    <title>从零开始的博客更新日志</title>
    <url>/2020/03/22/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/</url>
    <content><![CDATA[<h2 id="「起点」"><a href="#「起点」" class="headerlink" title="「起点」"></a>「起点」</h2><ul>
<li>决定使用静态博客框架 <code>Hexo</code> 进行搭建</li>
<li>将搭建好的博客部署到 <code>Github</code> （后期可能考虑改为个人主页再部署到服务器上）</li>
</ul>
<h2 id="「安装与使用」"><a href="#「安装与使用」" class="headerlink" title="「安装与使用」"></a>「安装与使用」</h2><h3 id="Node-js-安装"><a href="#Node-js-安装" class="headerlink" title="Node.js 安装"></a>Node.js 安装</h3><ol>
<li><p>访问 <code>https://nodejs.org/en/</code> 并安装 <code>Node.js</code> （我的系统版本为 <code>Windows10 - 64 bit</code> ）</p>
</li>
<li><p><code>cmd</code> 中输入 <code>node -v</code> 验证是否安装成功（安装版本为 <code>v12.16.1</code> ）</p>
</li>
</ol>
<h3 id="安装-Hexo-框架"><a href="#安装-Hexo-框架" class="headerlink" title="安装 Hexo 框架"></a>安装 Hexo 框架</h3><ol>
<li>先利用 <code>npm</code> 安装 <code>cnpm</code></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org <span class="comment"># Install cnpm</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>利用 <code>cnpm</code> 安装 <code>hexo-cli</code></li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm install -g hexo-cli <span class="comment"># Install hexo-cli</span></span><br><span class="line"></span><br><span class="line">hexo -v <span class="comment"># Check the version of Hexo</span></span><br><span class="line">hexo: 4.2.0</span><br><span class="line">hexo-cli: 3.1.0</span><br><span class="line">os: Windows_NT 10.0.18362 win32 x64</span><br><span class="line">node: 12.16.1</span><br><span class="line">v8: 7.8.279.23-node.31</span><br><span class="line">uv: 1.34.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.7</span><br><span class="line">ares: 1.15.0</span><br><span class="line">modules: 72</span><br><span class="line">nghttp2: 1.40.0</span><br><span class="line">napi: 5</span><br><span class="line">llhttp: 2.0.4</span><br><span class="line">http_parser: 2.9.3</span><br><span class="line">openssl: 1.1.1d</span><br><span class="line">cldr: 35.1</span><br><span class="line">icu: 64.2</span><br><span class="line">tz: 2019c</span><br><span class="line">unicode: 12.1</span><br></pre></td></tr></table></figure>

<ol start="3">
<li><p>建立文件夹 <code>mkdir Blog</code> 并进入</p>
</li>
<li><p>初始化 <code>hexo</code></p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init <span class="comment"># Initialize Hexo</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>启动 <code>hexo</code> （预览用）</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s <span class="comment"># hexo server/start</span></span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure>

<ol start="6">
<li>浏览器中访问 <code>localhost:4000</code> 测试</li>
</ol>
<h3 id="新建博客文章"><a href="#新建博客文章" class="headerlink" title="新建博客文章"></a>新建博客文章</h3><ol>
<li>新建文章（路径在 <code>/Blog/source/_posts/</code> 中）</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo n <span class="string">"从零开始的博客更新日志"</span> <span class="comment"># Create a new post</span></span><br><span class="line">INFO  Created: D:\Blog\<span class="built_in">source</span>\_posts\从零开始的博客更新日志.md</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>编写 <code>markdown</code> 文件（ <code>Typora</code> / <code>VS Code</code> ）</p>
</li>
<li><p>清理并生成</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /path/to/the/blog <span class="comment"># Cd to the blog directory</span></span><br><span class="line"></span><br><span class="line">hexo clean</span><br><span class="line">INFO  Deleted database.</span><br><span class="line">INFO  Deleted public folder.</span><br><span class="line"></span><br><span class="line">hexo g <span class="comment"># hexo generate</span></span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Files loaded <span class="keyword">in</span> 150 ms</span><br><span class="line">INFO  Generated: fancybox/blank.gif</span><br><span class="line">INFO  Generated: index.html</span><br><span class="line">INFO  Generated: fancybox/fancybox_loading@2x.gif</span><br><span class="line">INFO  Generated: fancybox/fancybox_overlay.png</span><br><span class="line">INFO  Generated: fancybox/fancybox_loading.gif</span><br><span class="line">INFO  Generated: archives/index.html</span><br><span class="line">INFO  Generated: fancybox/jquery.fancybox.css</span><br><span class="line">INFO  Generated: archives/2020/03/index.html</span><br><span class="line">INFO  Generated: fancybox/fancybox_sprite@2x.png</span><br><span class="line">INFO  Generated: fancybox/fancybox_sprite.png</span><br><span class="line">INFO  Generated: archives/2020/index.html</span><br><span class="line">INFO  Generated: fancybox/jquery.fancybox.pack.js</span><br><span class="line">INFO  Generated: fancybox/helpers/fancybox_buttons.png</span><br><span class="line">INFO  Generated: css/fonts/fontawesome-webfont.woff</span><br><span class="line">INFO  Generated: fancybox/jquery.fancybox.js</span><br><span class="line">INFO  Generated: css/fonts/fontawesome-webfont.eot</span><br><span class="line">INFO  Generated: fancybox/helpers/jquery.fancybox-buttons.css</span><br><span class="line">INFO  Generated: fancybox/helpers/jquery.fancybox-thumbs.css</span><br><span class="line">INFO  Generated: fancybox/helpers/jquery.fancybox-buttons.js</span><br><span class="line">INFO  Generated: css/style.css</span><br><span class="line">INFO  Generated: js/script.js</span><br><span class="line">INFO  Generated: fancybox/helpers/jquery.fancybox-media.js</span><br><span class="line">INFO  Generated: fancybox/helpers/jquery.fancybox-thumbs.js</span><br><span class="line">INFO  Generated: css/fonts/FontAwesome.otf</span><br><span class="line">INFO  Generated: css/fonts/fontawesome-webfont.svg</span><br><span class="line">INFO  Generated: css/fonts/fontawesome-webfont.ttf</span><br><span class="line">INFO  Generated: css/images/banner.jpg</span><br><span class="line">INFO  Generated: 2020/03/22/hello-world/index.html</span><br><span class="line">INFO  Generated: 2020/03/22/从零开始的博客更新日志/index.html</span><br><span class="line">INFO  31 files generated <span class="keyword">in</span> 513 ms</span><br></pre></td></tr></table></figure>



<h3 id="生成子页面"><a href="#生成子页面" class="headerlink" title="生成子页面"></a>生成子页面</h3><p>在 Bash 中运行例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo new page tags <span class="comment"># 生成 tags 子页面</span></span><br><span class="line">hexo new page categories <span class="comment"># 生成 categories 子页面</span></span><br></pre></td></tr></table></figure>

<p>对应的，在 <code>tags</code> 和 <code>categories</code> 新建的 markdown 页面中设置 <code>Front-matter</code> 。例如 <code>tags/index.md</code> 中：</p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Tags</span><br><span class="line">date: 2020-03-28 15:45:56</span><br><span class="line">type: "tags"</span><br><span class="line">top<span class="emphasis">_img: /img/tags_</span>cover.jpg</span><br><span class="line">---</span><br></pre></td></tr></table></figure>



<h3 id="启用-Front-matter"><a href="#启用-Front-matter" class="headerlink" title="启用 Front-matter"></a>启用 Front-matter</h3><blockquote>
<p>所谓 Front-matter，是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量，举例来说：</p>
</blockquote>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">date: 2013/7/13 20:46:25</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>在 Front-matter 中，我启用以下项。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">&#123;&#123;</span> <span class="string">title</span> <span class="string">&#125;&#125;</span> <span class="comment"># 标题，自动获取</span></span><br><span class="line"><span class="attr">date:</span> <span class="string">&#123;&#123;</span> <span class="string">date</span> <span class="string">&#125;&#125;</span> <span class="comment"># 日期，自动获取</span></span><br><span class="line"><span class="attr">category:</span> <span class="comment"># 分类</span></span><br><span class="line"><span class="attr">tags:</span> <span class="comment"># 标签</span></span><br><span class="line"><span class="attr">top_img:</span> <span class="comment"># 顶图</span></span><br><span class="line"><span class="attr">cover:</span> <span class="comment"># 封面缩略图</span></span><br><span class="line"><span class="attr">toc_number:</span> <span class="comment"># 目录是否编号</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>除了 YAML 外，你也可以使用 JSON 来编写 Front-matter，只要将 <code>---</code> 代换成 <code>;;;</code> 即可。</p>
</blockquote>
<h3 id="启用标签"><a href="#启用标签" class="headerlink" title="启用标签"></a>启用标签</h3><p>在 Front-matter 中，若要使用 Tags,应以以下格式写入：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">tag1</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">tag2</span></span><br></pre></td></tr></table></figure>

<p>发布时会自动生成 Tags。</p>
<h3 id="部署到-Github"><a href="#部署到-Github" class="headerlink" title="部署到 Github"></a>部署到 Github</h3><ol>
<li><p>登录 <code>Github</code></p>
</li>
<li><p>新建仓库 <code>indexql.github.io</code></p>
</li>
<li><p><code>blog</code> 目录下安装 <code>git</code> 部署的插件</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm install --save hexo-deployer-git <span class="comment"># Install git plugin</span></span><br></pre></td></tr></table></figure>

<ol start="4">
<li>设置 <code>_config.yml</code></li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Modify below</span></span><br><span class="line"><span class="comment">## Deployment</span></span><br><span class="line"><span class="comment"># Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/Indexql/Indexql.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure>

<ol start="5">
<li>部署到远端</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo d <span class="comment"># Deploy</span></span><br><span class="line"><span class="comment"># This step requires your Github account and password.</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>当执行 <code>hexo deploy</code> 时，Hexo 会将 public 目录中的文件和目录推送至 <code>_config.yml</code> 中指定的远端仓库和分支中，并且完全覆盖该分支下的已有内容。</p>
</blockquote>
<ol start="6">
<li>访问 <code>indexql.github.io</code></li>
</ol>
<h3 id="域名注册与解析"><a href="#域名注册与解析" class="headerlink" title="域名注册与解析"></a>域名注册与解析</h3><p>我从<a href="https://www.aliyun.com/" target="_blank" rel="noopener">阿里云</a>上购买了一个域名。在购买的时候我想起了 <code>mili</code> 的 <code>world.execute(me);</code> ，个人非常喜欢的一首歌。于是找到了 <code>.world</code> 和 <code>.me</code> 这两个域名。在一小段纠结之后选择了前者。将本站解析为 <code>indexql.world</code> 或 <code>www.indexql.world</code> 。かっこいい，しかし，略显中二。</p>
<p><img src="/" class="lazyload" data-src="http://q7y4py6en.bkt.clouddn.com/static/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/7.jpg"  alt="indexql.world 解析设置"></p>
<p>再在 <code>/source</code> 目录下新建 <code>CNAME</code> ，内容为注册的域名，我的为 <code>indexql.world</code> 。</p>
<h2 id="「美化」"><a href="#「美化」" class="headerlink" title="「美化」"></a>「美化」</h2><h3 id="更换-hexo-theme-yilia-主题（已更新为-Ayer）"><a href="#更换-hexo-theme-yilia-主题（已更新为-Ayer）" class="headerlink" title="更换 hexo-theme-yilia 主题（已更新为 Ayer）"></a>更换 hexo-theme-yilia 主题（已更新为 Ayer）</h3><ol>
<li>下载主题</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/litten/hexo-theme-yilia themes/yilia <span class="comment"># Clone to /blog/themes/yilia</span></span><br></pre></td></tr></table></figure>

<ol start="2">
<li>设置 <code>_config.yml</code></li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">yilia</span> <span class="comment"># Modify this</span></span><br></pre></td></tr></table></figure>

<ol start="3">
<li>重新清理生成</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<ol start="4">
<li><p>预览 <code>localhost:4000</code></p>
</li>
<li><p>部署到远端</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure>



<h3 id="更换-Ayer-主题（已更新为-Butterfly）"><a href="#更换-Ayer-主题（已更新为-Butterfly）" class="headerlink" title="更换 Ayer 主题（已更新为 Butterfly）"></a>更换 Ayer 主题（已更新为 Butterfly）</h3><blockquote>
<p>Ayer 是一个干净且优雅的 Hexo 主题。<a href="https://github.com/Shen-Yu/hexo-theme-ayer" target="_blank" rel="noopener">Ayer</a> 在马来语中是“水”的意思，在西班牙语中是“昨天”的意思。</p>
</blockquote>
<p>在 <a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo 主题官网</a>稍微逛了一会儿，选出了能基本符合我审美要求并且比较简约的主题，就是这款 Ayer。非常喜欢作者关于 HomePage 和侧边栏的设计。</p>
<p>国内若从 <a href="https://github.com/Shen-Yu/hexo-theme-ayer" target="_blank" rel="noopener">Github 地址</a>下载速度太慢的话可以考虑<a href="https://gitee.com/shen-yu/hexo-theme-ayer" target="_blank" rel="noopener">国内镜像</a>下载。</p>
<p>同样，需要设置 <code>_config.yml</code> 。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">hexo-theme-ayer</span> <span class="comment"># Modify this</span></span><br></pre></td></tr></table></figure>

<h3 id="更换主题为-Butterfly"><a href="#更换主题为-Butterfly" class="headerlink" title="更换主题为 Butterfly"></a>更换主题为 Butterfly</h3><p>Hexo 主题 <a href="https://github.com/jerryc127/hexo-theme-butterfly" target="_blank" rel="noopener">Butterfly</a> 是基于 <a href="https://github.com/Molunerfinn/hexo-theme-melody" target="_blank" rel="noopener">hexo-theme-melody</a> 制作的一款主题。</p>
<p>同样，需要设置 <code>_config.yml</code> 。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">Butterfly</span> <span class="comment"># Modify this</span></span><br></pre></td></tr></table></figure>

<h4 id="下载主题"><a href="#下载主题" class="headerlink" title="下载主题"></a>下载主题</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc1227/hexo-theme-butterfly.git themes/Butterfly <span class="comment"># 下载 Butterfly 主题到 themes 文件夹下</span></span><br></pre></td></tr></table></figure>



<h4 id="安装-pug-以及-stylus-的渲染器"><a href="#安装-pug-以及-stylus-的渲染器" class="headerlink" title="安装 pug 以及 stylus 的渲染器"></a>安装 pug 以及 stylus 的渲染器</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure>



<h4 id="清理并生成"><a href="#清理并生成" class="headerlink" title="清理并生成"></a>清理并生成</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</span><br></pre></td></tr></table></figure>



<h4 id="更改配置文件"><a href="#更改配置文件" class="headerlink" title="更改配置文件"></a>更改配置文件</h4><p>根目录中 <code>_config.yml</code> 为网站配置文件；主题文件夹 <code>/blog/themes</code> 中的 <code>_config.yml</code> 为主题配置文件。主题文件夹中的配置文件优先级高于网站配置文件，当有重复项时以主题配置文件中的配置信息为准。配置文件是使用 <code>yaml</code> 语法（同时支持 <code>json</code> 语法，但推荐使用前者）。</p>
<p>根据 <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo 文档</a>的内容进行学习，并对 <code>_congfig.yml</code> 中相关参数进行更改，例如网站标题、姓名、时区等信息。</p>
<h3 id="对-Butterfly-主题进行配置更改"><a href="#对-Butterfly-主题进行配置更改" class="headerlink" title="对 Butterfly 主题进行配置更改"></a>对 Butterfly 主题进行配置更改</h3><p>参考 <a href="https://blog.zplayer.cloud/hexo/Hexo_blog_build/" target="_blank" rel="noopener">Hexo 博客搭建配置完全指南</a>进行对 Butterfly 主题配置文件的设置。配置项大多都在 <code>/themes/Butterfly/_config.yml</code> 这个文件中。</p>
<h4 id="更改-Banner-图"><a href="#更改-Banner-图" class="headerlink" title="更改 Banner 图"></a>更改 Banner 图</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># if the banner of page not setting,it will show the top_img</span></span><br><span class="line"><span class="attr">default_top_img:</span> <span class="string">http://q7y4py6en.bkt.clouddn.com/static/images/theme/cover.jpg</span> <span class="comment"># Modify this</span></span><br></pre></td></tr></table></figure>



<h4 id="更改-Avatar"><a href="#更改-Avatar" class="headerlink" title="更改 Avatar"></a>更改 Avatar</h4><p>Avatar 暂时使用ガルパピコ的<font color="purple">湊友希那</font>玩猫猫图。图像经过<a href="https://www.asqql.com/gifyxtp/" target="_blank" rel="noopener">圆形头像在线制作工具</a>转换得到。未来打算制作 SVG Logo。</p>
<p><img src="/" class="lazyload" data-src="http://q7y4py6en.bkt.clouddn.com/static/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/3.png"  alt="ykn"></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">img:</span> <span class="string">http://q7y4py6en.bkt.clouddn.com/static/images/theme/ykn_circle.png</span></span><br><span class="line">  <span class="attr">effect:</span> <span class="literal">false</span> <span class="comment"># 头像会一直转圈</span></span><br></pre></td></tr></table></figure>



<h4 id="网站-Icon"><a href="#网站-Icon" class="headerlink" title="网站 Icon"></a>网站 Icon</h4><p>网站图标使用了最喜欢的 <font color="#9400D3">Roselia</font> 的 Violet，图像经过<a href="https://www.bitbug.net/" target="_blank" rel="noopener">在线制作 ico 图标网站</a>转换得到。</p>
<p><img src="/" class="lazyload" data-src="http://q7y4py6en.bkt.clouddn.com/static/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/1.png"  alt="Roselia Violet"></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Favicon</span></span><br><span class="line"><span class="comment"># ---------------</span></span><br><span class="line"><span class="attr">favicon:</span> <span class="string">Roselia.ico</span></span><br></pre></td></tr></table></figure>



<h4 id="社交信息"><a href="#社交信息" class="headerlink" title="社交信息"></a>社交信息</h4><p>更改社交 Social 信息：Github、邮箱、RSS 等。</p>
<h4 id="背景特效"><a href="#背景特效" class="headerlink" title="背景特效"></a>背景特效</h4><p>我开启了动态彩带这一项。防止卡顿，建议只开启一项。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 动态彩带</span></span><br><span class="line"><span class="attr">canvas_ribbon_piao:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">mobile:</span> <span class="literal">false</span> <span class="comment"># false： 手机端不显示</span></span><br><span class="line">  				<span class="comment"># true：	 手机端显示</span></span><br></pre></td></tr></table></figure>



<h3 id="网易云音乐插件"><a href="#网易云音乐插件" class="headerlink" title="网易云音乐插件"></a>网易云音乐插件</h3><p>加入了网易云音乐的插件，尺寸设定为大尺寸，播放曲目为 <font color="#9400D3">Roselia</font> 的 R。自动播放设置为 <code>false</code> 。当前已弃用，打算打造专属的音乐页面。</p>
<h3 id="RSS-订阅"><a href="#RSS-订阅" class="headerlink" title="RSS 订阅"></a>RSS 订阅</h3><p>需要安装 <a href="https://github.com/hexojs/hexo-generator-feed" target="_blank" rel="noopener">hexo-generator-feed</a>，运行 <code>cnpm install hexo-generator-feed --save</code> 。</p>
<p>在 <code>_config.yml</code> 中设置插件如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">feed:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">atom</span> <span class="comment"># RSS 的类型(atom/rss2)</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">atom.xml</span> <span class="comment"># 文件路径,默认是 atom.xml/rss2.xml</span></span><br><span class="line">  <span class="attr">limit:</span> <span class="number">20</span> <span class="comment"># 展示文章的数量,使用 0 或者 false 代表展示全部</span></span><br><span class="line">  <span class="attr">hub:</span></span><br></pre></td></tr></table></figure>

<p>并修改 <code>url</code> 如下：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">url:</span> <span class="string">http://indexql.world/</span></span><br></pre></td></tr></table></figure>

<p>现在可以通过首页的 RSS 图标链接获取链接，本站链接为 <code>http://indexql.world/atom.xml</code> 。</p>
<h3 id="Valine-评论区"><a href="#Valine-评论区" class="headerlink" title="Valine 评论区"></a>Valine 评论区</h3><p>评论区配置引入 Valine。</p>
<blockquote>
<p>Valine 诞生于2017年8月7日，是一款基于LeanCloud的快速、简洁且高效的无后端评论系统。理论上支持但不限于静态博客，目前已有Hexo、Jekyll、Typecho、Hugo、Ghost 等博客程序在使用Valine。</p>
</blockquote>
<p>Butterfly 的主题集成了 Valine 评论系统，开启此配置项。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">valine:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># if you want use valine,please set this value is true</span></span><br></pre></td></tr></table></figure>

<p><code>appId</code> 与 <code>appKey</code> 这两项的值需要通过 <a href="https://www.leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a> 获得。注册完需进行实名认证，然后进入控制台，创建一个应用，选择开发版，如下图所示。</p>
<p><img src="/" class="lazyload" data-src="http://q7y4py6en.bkt.clouddn.com/static/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/5.png"  alt="Create Valine Keys"></p>
<p>然后进入应用进入 设置 → 应用 Keys 即可获得 <code>appId</code> 与 <code>appKey</code> ，如下图所示。</p>
<p><img src="/" class="lazyload" data-src="http://q7y4py6en.bkt.clouddn.com/static/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/6.png"  alt="Get Valine Keys"></p>
<p>评论区存储管理在 <a href="https://www.leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a> 上进行。</p>
<h3 id="启用文件资源文件夹"><a href="#启用文件资源文件夹" class="headerlink" title="启用文件资源文件夹"></a>启用文件资源文件夹</h3><blockquote>
<p>对于那些想要更有规律地提供图片和其他资源以及想要将他们的资源分布在各个文章上的人来说，Hexo 也提供了更组织化的方式来管理资源。这个稍微有些复杂但是管理资源非常方便的功能可以通过将 <code>config.yml</code> 文件中的 <code>post_asset_folder</code> 选项设为 <code>true</code> 来打开。</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>当资源文件管理功能打开后，Hexo 将会在你每一次通过 <code>hexo new [layout] &lt;title&gt;</code> 命令创建新文章时自动创建一个文件夹。</p>
<p>这样，在 <code>source/_posts</code> 中会生成文章 <code>post_name.md</code> 和同名文件夹 <code>post_name</code> 。将图片资源放在 <code>post_name</code> 中，文章就可以使用相对路径引用图片资源了。但，上述是 Markdown 的引用方式，图片只能在文章中显示，但无法在首页中正常显示。如果希望图片在文章和首页中同时显示，有一款插件：<a href="https://github.com/CodeFalling/hexo-asset-image" target="_blank" rel="noopener">hexo-asset-image</a>，这款插件可以自动将图片地址替换为绝对路径，使用方法也很简单：</p>
<p><font color="green">正确的做法如下：</font></p>
<ol>
<li><p>譬如创建一篇名为 postTest 的 post，执行命令 <code>hexo n &quot;postTest&quot;</code></p>
</li>
<li><p>需要插入 1.jpg，在 postTest 文件夹中添加 1.jpg</p>
</li>
<li><p>在 postTest.md 中插入图片语法为 <code>![ImgDescribe](http://q7y4py6en.bkt.clouddn.com/static/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/1.jpg)</code></p>
</li>
</ol>
<p><font color="red">在拥有图床功能后，可将文件资源文件夹移动至 <code>static</code> 文件夹上传至<a href="#tuchuang">图床</a>，具体详见部分</font></p>
<h3 id="搜索功能（需要更新）"><a href="#搜索功能（需要更新）" class="headerlink" title="搜索功能（需要更新）"></a>搜索功能<font color="red">（需要更新）</font></h3><p>启用搜索功能： <code>_congfig.yml</code> 中 <code>search: true</code> 。</p>
<p>需要安装 <a href="https://github.com/theme-next/hexo-generator-searchdb" target="_blank" rel="noopener">hexo-generator-searchdb</a>，运行 <code>cnpm install hexo-generator-searchdb --save</code> 。</p>
<p><img src="/" class="lazyload" data-src="http://q7y4py6en.bkt.clouddn.com/static/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/4.png"  alt="Test"></p>
<p>如图所示为正确的搜索测试界面。</p>
<h2 id="「优化」"><a href="#「优化」" class="headerlink" title="「优化」"></a>「优化」</h2><h3 id="图床"><a href="#图床" class="headerlink" title="图床"></a><span id="tuchuang">图床</span></h3><p>考虑到用户访问 Github 速度问题，我启用了<a href="https://portal.qiniu.com/" target="_blank" rel="noopener">七牛云</a>将本地本来需要上传到 GitPage 上的图片上传至七牛云中。并在本地配置七牛云的 Hexo 插件 <a href="https://github.com/gyk001/hexo-qiniu-sync" target="_blank" rel="noopener"><code>hexo-qiniu-sync</code></a> 。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在你的 hexo 主目录下运行以下命令进行安装：</span></span><br><span class="line">npm install hexo-qiniu-sync --save</span><br></pre></td></tr></table></figure>

<p>并在 <code>_congfig.yml</code> 中添加以下配置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 以下是我的配置：</span></span><br><span class="line"><span class="comment"># plugins:</span></span><br><span class="line"><span class="comment"># - hexo-qiniu-sync</span></span><br><span class="line"><span class="attr">qiniu:</span></span><br><span class="line">  <span class="attr">offline:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">sync:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">bucket:</span> <span class="string">indexql-blog</span></span><br><span class="line">  <span class="comment"># secret_file: sec/qn.json or C: # 这行代码最好注释，否则会报错</span></span><br><span class="line">  <span class="comment"># 在 [个人面板——密钥管理] 里面你可以找到你下面这两对密钥</span></span><br><span class="line">  <span class="attr">access_key:</span> <span class="string">ACCESS_KEY</span> <span class="comment"># 需替换</span></span><br><span class="line">  <span class="attr">secret_key:</span> <span class="string">SECRET_KEY</span> <span class="comment"># 需替换</span></span><br><span class="line">  <span class="attr">dirPrefix:</span> <span class="string">static</span> <span class="comment"># "这个是七牛的目录名，七牛存储空间没有显示的目录。所谓目录，就是在指定访问域名后面先加上你的目录名，再加上你上传的图片名，这样就相当于目录了，来区分图片的分类。"</span></span><br><span class="line">  <span class="attr">urlPrefix:</span> <span class="string">http://q7y4py6en.bkt.clouddn.com/static</span> <span class="comment"># "这里第一个位置填写刚才系统分配给你的域名，第二个位置填写上一行的 dirPrefix 的内容。"</span></span><br><span class="line">  <span class="attr">up_host:</span> <span class="string">http://upload.qiniu.com</span> 	<span class="comment"># "华东区为这个默认访问域名，具体可以查看 https://developer.qiniu.com/kodo/manual/1671/region-endpoint 这个网址。"</span></span><br><span class="line">  <span class="attr">local_dir:</span> <span class="string">static</span> <span class="comment"># "在hexo主目录下将会自动创建的你的文件同步文件夹名，可以自定义。"</span></span><br><span class="line">  <span class="attr">update_exist:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">image:</span> </span><br><span class="line">    <span class="attr">folder:</span> <span class="string">images</span></span><br><span class="line">    <span class="attr">extend:</span> </span><br><span class="line">  <span class="attr">js:</span></span><br><span class="line">    <span class="attr">folder:</span> <span class="string">js</span></span><br><span class="line">  <span class="attr">css:</span></span><br><span class="line">    <span class="attr">folder:</span> <span class="string">css</span></span><br></pre></td></tr></table></figure>

<p><img src="/" class="lazyload" data-src="http://q7y4py6en.bkt.clouddn.com/static/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/8.jpg"  alt="Qiniu"></p>
<p>之后在本地根目录下会生成一个 <code>static</code> 文件夹，将图片存到里面即可。每次同步运行 <code>hexo qiniu sync</code> ，如下图。</p>
<p><img src="/" class="lazyload" data-src="http://q7y4py6en.bkt.clouddn.com/static/images/%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%9B%B4%E6%96%B0%E6%97%A5%E5%BF%97/9.jpg"  alt="hexo qiniu sync"></p>
<h2 id="Ref"><a href="#Ref" class="headerlink" title="Ref"></a>Ref</h2><ul>
<li><a href="https://github.com/litten/hexo-theme-yilia" target="_blank" rel="noopener">Hexo Theme: yilia</a></li>
<li><a href="https://github.com/Shen-Yu/hexo-theme-ayer" target="_blank" rel="noopener">Hexo Theme: Ayer</a></li>
<li><a href="https://github.com/jerryc127/hexo-theme-butterfly" target="_blank" rel="noopener">Hexo Theme: Butterfly</a></li>
<li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo 官方文档</a></li>
<li><a href="https://merrier.wang/20190111/image-skills-in-hexo.html" target="_blank" rel="noopener">Hexo 中图片处理正确姿势</a></li>
<li><a href="https://wangxiaoyu-go.github.io/2018/11/18/hexo-asset-image/" target="_blank" rel="noopener">Hexo 中插入图片 hexo asset image</a></li>
<li><a href="https://blog.csdn.net/zhanghongjie0302/article/details/20837671" target="_blank" rel="noopener">绝对路径和相对路径</a></li>
<li><a href="https://shen-yu.gitee.io/2019/ayer/" target="_blank" rel="noopener">Ayer 中文说明</a></li>
<li><a href="https://yuchen-lea.github.io/2016-01-18-add-rss-to-hexo/" target="_blank" rel="noopener">给 Hexo 添加 RSS</a></li>
<li><a href="https://blog.zplayer.cloud/hexo/Hexo_blog_build" target="_blank" rel="noopener">史上最全的 Hexo 博客搭建配置完全指南</a></li>
<li><a href="https://jerryc.me/categories/Butterfly%E6%96%87%E6%AA%94/" target="_blank" rel="noopener">JerryC - Butterfly 文档</a></li>
<li><a href="https://blog.csdn.net/btlas/article/details/51712596" target="_blank" rel="noopener">解析自己的域名到 CSDN 博客、CSDN 博客自定义域名</a></li>
<li><a href="https://juejin.im/post/5bebfe51e51d45332a456de0" target="_blank" rel="noopener">最全 Hexo 博客搭建 + 主题优化 + 插件配置 + 常用操作 + 错误分析</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/89472402" target="_blank" rel="noopener">Hexo + Github 博客搭建完全教程</a></li>
<li><a href="https://zhuanlan.zhihu.com/p/34747279" target="_blank" rel="noopener">Hexo 七牛云图床使用</a></li>
<li><a href="https://blog.csdn.net/qq_33530388/article/details/59058061" target="_blank" rel="noopener">markdown 中的锚点及其使用</a></li>
</ul>
]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
</search>
